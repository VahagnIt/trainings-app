{"version":3,"sources":["components/Filter/Filter.js","components/CardList/Card/Card.js","components/CardList/CardList.js","components/Loader/Loader.js","services/api.js","services/UrlService.js","components/containers/Training/Training.js","App.js","serviceWorker.js","index.js","components/CardList/CardList.module.css"],"names":["Filter","props","className","states","onChangeStatus","map","el","index","key","checked","onClick","name","generateStatusBar","metrices","onClickMetrice","id","icon","generateMetriceBar","convertDateFormat","date","myDate","Date","day","getDate","getMonth","getFullYear","Card","card","getIcon","image","src","metric","type","toUpperCase","title","start","end","CardList","cards","loadMore","page","classes","wrapper","button","disabled","page_num","getCards","search","fetch","then","resp","json","generateSearchURL","obj","path","slice","Training","state","loaded","pagesize","metrics","dir","setState","prevState","stateChanged","forEach","i","filter","toLowerCase","toString","location","changeURL","catch","err","console","log","history","push","pathname","this","split","arrFrom","toObjectFromURL","ids","includes","cardList","length","React","Component","App","component","to","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.94f1b363.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Filter.css\";\r\n\r\nconst generateStatusBar = ({ states, onChangeStatus }) => {\r\n  return states.map((el, index) => {\r\n    return (\r\n      <li\r\n        key={index}\r\n        className={el.checked ? \"checked\" : \"\"}\r\n        onClick={() => onChangeStatus(index)}\r\n      >\r\n        {el.name}\r\n      </li>\r\n    );\r\n  });\r\n};\r\nconst generateMetriceBar = ({ metrices, onClickMetrice }) => {\r\n  return metrices.map((el) => {\r\n    return (\r\n      <li\r\n        key={el.id}\r\n        className={el.checked ? \"checked\" : \"\"}\r\n        onClick={() => onClickMetrice(el.id)}\r\n      >\r\n        <i className={el.icon} />\r\n      </li>\r\n    );\r\n  });\r\n};\r\nconst Filter = (props) => {\r\n  return (\r\n    <div className=\"filter\">\r\n      <div className=\"statuses-wrapper\">\r\n        <ul className=\"statuses\">{generateStatusBar(props)}</ul>\r\n      </div>\r\n      <div className=\"metrices-wrapper\">\r\n        <h3 className=\"title\"> Metrice</h3>\r\n        <ul className=\"metrices\">{generateMetriceBar(props)}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nfunction convertDateFormat(date) {\r\n  let myDate = new Date(date);\r\n  let day = myDate.getDate();\r\n  let month = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ][myDate.getMonth()];\r\n  day < 10 && (day = \"0\" + day);\r\n  return month + \" \" + day + \"-\" + myDate.getFullYear();\r\n}\r\n\r\nconst Card = ({ card, getIcon }) => {\r\n  return (\r\n    <div className=\"Card\">\r\n      <div className=\"header\">\r\n        {card.image && <img src={card.image} />}\r\n        <i className={getIcon(card.metric)}></i>\r\n        <div>\r\n          <span>\r\n            <i className=\"fas fa-crosshairs\"></i>\r\n            {card.type.toUpperCase()}\r\n          </span>\r\n          <i className={getIcon(card.metric)}></i>\r\n        </div>\r\n      </div>\r\n      <div className=\"body\">\r\n        <p className=\"title\">{card.title}</p>\r\n        <p className=\"date\">\r\n          <i className=\"fas fa-calendar-alt\"></i>\r\n          {convertDateFormat(card.date.start) + \" \"}-\r\n          {\" \" + convertDateFormat(card.date.end)}\r\n        </p>\r\n      </div>\r\n      <div className=\"footer\">\r\n        <button>\r\n          <i className=\"fas fa-plus\"></i>JOIN CONTEST\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card/Card\";\r\nimport classes from \"./CardList.module.css\";\r\n\r\nconst CardList = ({ cards, getIcon, loadMore, page }) => {\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {cards.map((card) => {\r\n        return <Card key={card.id} card={card} getIcon={getIcon} />;\r\n      })}\r\n      <button\r\n        className={classes.button}\r\n        onClick={() => loadMore(-1)}\r\n        disabled={!(page - 1)}\r\n      >\r\n        <i className=\"fas fa-backward\"></i>\r\n      </button>\r\n      <span className={classes.page_num}>{page}</span>\r\n      <button className={classes.button} onClick={() => loadMore(1)}>\r\n        <i className=\"fas fa-forward\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nimport \"./Loader.css\";\r\n\r\nexport default () => (\r\n  <div className=\"lds-wrapper\">\r\n    <div className=\"lds-default\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n);\r\n","const url = \"https://frontapi.inkin.com/getContests.php\";\r\n\r\nexport const getCards = (search) => {\r\n  return fetch(url + search).then((resp) => resp.json());\r\n};\r\n","export const toObjectFromURL = (search) => {\r\n  let obj = {};\r\n  let arr = search.slice(1).split(\"&\");\r\n  arr.forEach((el) => {\r\n    let arrFrom = el.split(\"=\");\r\n    obj[arrFrom[0]] = arrFrom[1];\r\n  });\r\n  return obj;\r\n};\r\nexport const generateSearchURL = (obj) => {\r\n  let path = \"?\";\r\n  for (let key in obj) {\r\n    obj[key] && (path += `${key}=${obj[key]}&`);\r\n  }\r\n  return path.slice(0, -1);\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Training.css\";\r\n\r\nimport Filter from \"../../Filter/Filter\";\r\nimport CardList from \"../../CardList/CardList\";\r\nimport Loader from \"../../Loader/Loader\";\r\n\r\nimport { getCards } from \"../../../services/api\";\r\nimport {\r\n  toObjectFromURL,\r\n  generateSearchURL,\r\n} from \"../../../services/UrlService\";\r\n\r\nclass Training extends React.Component {\r\n  state = {\r\n    states: [\r\n      { name: \"Ongoing\", checked: false, state: \"inprocess\" },\r\n      { name: \"Upcoming\", checked: false, state: \"upcoming\" },\r\n      { name: \"Ended\", checked: false, state: \"past\" },\r\n    ],\r\n    metrices: [\r\n      { id: 1, name: \"steps\", checked: false, icon: \"fas fa-shoe-prints\" },\r\n      { id: 2, name: \"calories\", checked: false, icon: \"fas fa-walking\" },\r\n      { id: 3, name: \"sleep\", checked: false, icon: \"fas fa-globe-europe\" },\r\n      { id: 5, name: \"activity\", checked: false, icon: \"fas fa-fire-alt\" },\r\n      { id: 9, name: \"distance\", checked: false, icon: \"fas fa-cloud-moon\" },\r\n      { id: 16, name: \"water\", checked: false, icon: \"fas fa-tint\" },\r\n    ],\r\n    loaded: true,\r\n    cards: [],\r\n    page: \"1\",\r\n    pagesize: \"6\",\r\n    state: \"\",\r\n    metrics: \"\",\r\n  };\r\n  componentDidMount() {\r\n    let search = this.props.location.search;\r\n    if (search) {\r\n      this.setState({ loaded: false });\r\n      let obj = toObjectFromURL(search);\r\n      let states = this.state.states.slice();\r\n      if (obj.state) {\r\n        states = states.map((el) => {\r\n          if (el.state === obj.state) {\r\n            el.checked = true;\r\n          }\r\n          return el;\r\n        });\r\n      }\r\n      let metrices = this.state.metrices.slice();\r\n      if (obj.metrics) {\r\n        let ids = obj.metrics.split(\",\").map((el) => +el);\r\n        metrices = metrices.map((el) => {\r\n          if (ids.includes(el.id)) {\r\n            el.checked = true;\r\n          }\r\n          return el;\r\n        });\r\n      }\r\n      getCards(search)\r\n        .then((cards) =>\r\n          this.setState({ ...obj, states, metrices, cards, loaded: true })\r\n        )\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n  loadMore = (dir) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        page: +prevState.page + dir,\r\n      };\r\n    }, this.stateChanged);\r\n  };\r\n  onChangeStatus = (index) => {\r\n    let states = this.state.states.slice();\r\n    states.forEach((el, i) => {\r\n      el.checked = i !== index ? false : true;\r\n    });\r\n    let state = states.filter((el) => el.checked)[0];\r\n    state = state ? state.state.toLowerCase() : \"\";\r\n    this.setState({ states, state, page: \"1\" }, this.stateChanged);\r\n  };\r\n  onClickMetrice = (id) => {\r\n    let metrices = this.state.metrices.map((el) => {\r\n      if (el.id === id) {\r\n        el.checked = !el.checked;\r\n      }\r\n      return el;\r\n    });\r\n    const metrics = metrices\r\n      .filter((el) => el.checked)\r\n      .map((el) => el.id)\r\n      .toString();\r\n    this.setState({ metrices, metrics, page: \"1\" }, this.stateChanged);\r\n  };\r\n  stateChanged = () => {\r\n    let { page, pagesize, state, metrics } = this.state;\r\n    let path = generateSearchURL({ page, pagesize, state, metrics });\r\n    if (this.props.location.search !== path) {\r\n      this.setState({ loaded: false });\r\n      this.changeURL(path);\r\n      getCards(path)\r\n        .then((cards) => {\r\n          this.setState({ cards, loaded: true });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  changeURL = (path) => {\r\n    this.props.history.push({\r\n      pathname: \"\",\r\n      search: `${path}`,\r\n    });\r\n  };\r\n  getIcon = (id) => {\r\n    return this.state.metrices.filter((el) => el.id === id)[0].icon;\r\n  };\r\n  render() {\r\n    let cardList = null;\r\n    if (this.state.loaded && this.state.cards.length) {\r\n      cardList = (\r\n        <CardList\r\n          cards={this.state.cards}\r\n          getIcon={this.getIcon}\r\n          loadMore={this.loadMore}\r\n          page={+this.state.page}\r\n        />\r\n      );\r\n    } else if (!this.state.loaded) {\r\n      cardList = <Loader />;\r\n    }\r\n    return (\r\n      <div className=\"Training\">\r\n        <Filter\r\n          states={this.state.states}\r\n          metrices={this.state.metrices}\r\n          onClickMetrice={this.onClickMetrice}\r\n          onChangeStatus={this.onChangeStatus}\r\n        />\r\n        {cardList}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Training;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { Route, Switch, Redirect } from \"react-router\";\nimport Training from \"./components/containers/Training/Training\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/trainings\" component={Training} />\n        <Redirect to=\"/trainings\" />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardList_wrapper__1gRSG\",\"button\":\"CardList_button__Ps2Kg\",\"page_num\":\"CardList_page_num__1cOQp\"};"],"sourceRoot":""}